apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "low-code-vinyl.fullname" . }}
  labels:
    {{- include "low-code-vinyl.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "low-code-vinyl.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "low-code-vinyl.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "low-code-vinyl.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "low-code-vinyl.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-redis
          image: alpine:3.12
          # init pattern adapted from appsmith: https://github.com/appsmithorg/appsmith/blob/release/deploy/helm/templates/statefulset.yaml
          command: ['sh', '-c', 'apk add redis; until redis-cli -h {{ include "low-code-vinyl.fullname" . }}-redis-master.{{.Release.Namespace}}.svc.cluster.local ping; do echo waiting for redis; sleep 2; done']
        - name: init-mongo
          image: bitnami/mongodb:4.4.1-debian-10-r12
          command: ['sh', '-c', 'until mongo --host {{ include "low-code-vinyl.fullname" . }}-mongodb.{{.Release.Namespace}}.svc.cluster.local --eval "db.getMongo()" > /dev/null 2>&1; do echo waiting for mongo; sleep 2; done']
      containers:
        - name: appsmith
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.appsmithImage.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.appsmithImage.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /api/v1/users/me
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /appsmith-stacks

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- with .Values.persistence }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ Values.persistence.size }}
  {{- end }}
